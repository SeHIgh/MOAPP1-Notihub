// Generated by view binder compiler. Do not edit!
package com.example.notihub.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.notihub.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityContentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View hBar;

  @NonNull
  public final FloatingActionButton hateButton;

  @NonNull
  public final FloatingActionButton likeButton;

  @NonNull
  public final ConstraintLayout linearLayout;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView textViewBoard;

  @NonNull
  public final TextView textViewDetail;

  @NonNull
  public final TextView textViewSummary;

  @NonNull
  public final TextView textViewTime;

  @NonNull
  public final TextView textViewTitle;

  @NonNull
  public final Toolbar toolbar;

  private ActivityContentBinding(@NonNull ConstraintLayout rootView, @NonNull View hBar,
      @NonNull FloatingActionButton hateButton, @NonNull FloatingActionButton likeButton,
      @NonNull ConstraintLayout linearLayout, @NonNull ConstraintLayout main,
      @NonNull TextView textViewBoard, @NonNull TextView textViewDetail,
      @NonNull TextView textViewSummary, @NonNull TextView textViewTime,
      @NonNull TextView textViewTitle, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.hBar = hBar;
    this.hateButton = hateButton;
    this.likeButton = likeButton;
    this.linearLayout = linearLayout;
    this.main = main;
    this.textViewBoard = textViewBoard;
    this.textViewDetail = textViewDetail;
    this.textViewSummary = textViewSummary;
    this.textViewTime = textViewTime;
    this.textViewTitle = textViewTitle;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityContentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityContentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_content, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityContentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.hBar;
      View hBar = ViewBindings.findChildViewById(rootView, id);
      if (hBar == null) {
        break missingId;
      }

      id = R.id.hateButton;
      FloatingActionButton hateButton = ViewBindings.findChildViewById(rootView, id);
      if (hateButton == null) {
        break missingId;
      }

      id = R.id.likeButton;
      FloatingActionButton likeButton = ViewBindings.findChildViewById(rootView, id);
      if (likeButton == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      ConstraintLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.textViewBoard;
      TextView textViewBoard = ViewBindings.findChildViewById(rootView, id);
      if (textViewBoard == null) {
        break missingId;
      }

      id = R.id.textViewDetail;
      TextView textViewDetail = ViewBindings.findChildViewById(rootView, id);
      if (textViewDetail == null) {
        break missingId;
      }

      id = R.id.textViewSummary;
      TextView textViewSummary = ViewBindings.findChildViewById(rootView, id);
      if (textViewSummary == null) {
        break missingId;
      }

      id = R.id.textViewTime;
      TextView textViewTime = ViewBindings.findChildViewById(rootView, id);
      if (textViewTime == null) {
        break missingId;
      }

      id = R.id.textViewTitle;
      TextView textViewTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitle == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityContentBinding((ConstraintLayout) rootView, hBar, hateButton, likeButton,
          linearLayout, main, textViewBoard, textViewDetail, textViewSummary, textViewTime,
          textViewTitle, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
